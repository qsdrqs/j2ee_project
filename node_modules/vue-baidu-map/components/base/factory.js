"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.createPoint = createPoint;
exports.createPixel = createPixel;
exports.createBounds = createBounds;
exports.createSize = createSize;
exports.createIcon = createIcon;
exports.createLabel = createLabel;
function createPoint(BMap) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var lng = options.lng,
      lat = options.lat;

  return new BMap.Point(lng, lat);
}

function createPixel(BMap) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var x = options.x,
      y = options.y;

  return new BMap.Pixel(x, y);
}

function createBounds(BMap) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var sw = options.sw,
      ne = options.ne;

  return new BMap.Bounds(createPoint(BMap, sw), createPoint(BMap, ne));
}

function createSize(BMap) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var width = options.width,
      height = options.height;

  return new BMap.Size(width, height);
}

function createIcon(BMap) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var url = options.url,
      size = options.size,
      _options$opts = options.opts,
      opts = _options$opts === undefined ? {} : _options$opts;

  return new BMap.Icon(url, createSize(BMap, size), {
    anchor: opts.anchor && createSize(BMap, opts.anchor),
    imageSize: opts.imageSize && createSize(BMap, opts.imageSize),
    imageOffset: opts.imageOffset && createSize(BMap, opts.imageOffset),
    infoWindowAnchor: opts.infoWindowAnchor && createSize(BMap, opts.infoWindowAnchor),
    printImageUrl: opts.printImageUrl
  });
}

function createLabel(BMap) {
  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  var content = options.content,
      opts = options.opts;

  return new BMap.Label(content, {
    offset: opts.offset && createSize(BMap, opts.offset),
    position: opts.position && createPoint(BMap, opts.position),
    enableMassClear: opts.enableMassClear
  });
}